{"changed":true,"filter":false,"title":"defs.h","tooltip":"/xv6/defs.h","value":"struct buf;\nstruct context;\nstruct file;\nstruct inode;\nstruct pipe;\nstruct proc;\nstruct rtcdate;\nstruct spinlock;\nstruct sleeplock;\nstruct stat;\nstruct superblock;\n\n// bio.c\nvoid            binit(void);\nstruct buf*     bread(uint, uint);\nvoid            brelse(struct buf*);\nvoid            bwrite(struct buf*);\n\n// console.c\nvoid            consoleinit(void);\nvoid            cprintf(char*, ...);\nvoid            consoleintr(int(*)(void));\nvoid            panic(char*) __attribute__((noreturn));\n\n// exec.c\nint             exec(char*, char**);\n\n// file.c\nstruct file*    filealloc(void);\nvoid            fileclose(struct file*);\nstruct file*    filedup(struct file*);\nvoid            fileinit(void);\nint             fileread(struct file*, char*, int n);\nint             filestat(struct file*, struct stat*);\nint             filewrite(struct file*, char*, int n);\n\n// fs.c\nvoid            readsb(int dev, struct superblock *sb);\nint             dirlink(struct inode*, char*, uint);\nstruct inode*   dirlookup(struct inode*, char*, uint*);\nstruct inode*   ialloc(uint, short);\nstruct inode*   idup(struct inode*);\nvoid            iinit(int dev);\nvoid            ilock(struct inode*);\nvoid            iput(struct inode*);\nvoid            iunlock(struct inode*);\nvoid            iunlockput(struct inode*);\nvoid            iupdate(struct inode*);\nint             namecmp(const char*, const char*);\nstruct inode*   namei(char*);\nstruct inode*   nameiparent(char*, char*);\nint             readi(struct inode*, char*, uint, uint);\nvoid            stati(struct inode*, struct stat*);\nint             writei(struct inode*, char*, uint, uint);\n\n// ide.c\nvoid            ideinit(void);\nvoid            ideintr(void);\nvoid            iderw(struct buf*);\n\n// ioapic.c\nvoid            ioapicenable(int irq, int cpu);\nextern uchar    ioapicid;\nvoid            ioapicinit(void);\n\n// kalloc.c\nchar*           kalloc(void);\nvoid            kfree(char*);\nvoid            kinit1(void*, void*);\nvoid            kinit2(void*, void*);\n\n// kbd.c\nvoid            kbdintr(void);\n\n// lapic.c\nvoid            cmostime(struct rtcdate *r);\nint             cpunum(void);\nextern volatile uint*    lapic;\nvoid            lapiceoi(void);\nvoid            lapicinit(void);\nvoid            lapicstartap(uchar, uint);\nvoid            microdelay(int);\n\n// log.c\nvoid            initlog(int dev);\nvoid            log_write(struct buf*);\nvoid            begin_op();\nvoid            end_op();\n\n// mp.c\nextern int      ismp;\nvoid            mpinit(void);\n\n// picirq.c\nvoid            picenable(int);\nvoid            picinit(void);\n\n// pipe.c\nint             pipealloc(struct file**, struct file**);\nvoid            pipeclose(struct pipe*, int);\nint             piperead(struct pipe*, char*, int);\nint             pipewrite(struct pipe*, char*, int);\n\n//PAGEBREAK: 16\n// proc.c\nvoid            exit(int);\nint             fork(void);\nint             growproc(int);\nint             kill(int);\nvoid            pinit(void);\nvoid            procdump(void);\nvoid            scheduler(void) __attribute__((noreturn));\nvoid            sched(void);\nvoid            sleep(void*, struct spinlock*);\nvoid            userinit(void);\nint             wait(int*);\nvoid            wakeup(void*);\nvoid            yield(void);\nvoid\t\t    hello(void);\t// MOD - 4/11 : WEEK 2 EXERCISE\nvoid            waitpid(int)\n\n// swtch.S\nvoid            swtch(struct context**, struct context*);\n\n// spinlock.c\nvoid            acquire(struct spinlock*);\nvoid            getcallerpcs(void*, uint*);\nint             holding(struct spinlock*);\nvoid            initlock(struct spinlock*, char*);\nvoid            release(struct spinlock*);\nvoid            pushcli(void);\nvoid            popcli(void);\n\n// sleeplock.c\nvoid            acquiresleep(struct sleeplock*);\nvoid            releasesleep(struct sleeplock*);\nint             holdingsleep(struct sleeplock*);\nvoid            initsleeplock(struct sleeplock*, char*);\n\n// string.c\nint             memcmp(const void*, const void*, uint);\nvoid*           memmove(void*, const void*, uint);\nvoid*           memset(void*, int, uint);\nchar*           safestrcpy(char*, const char*, int);\nint             strlen(const char*);\nint             strncmp(const char*, const char*, uint);\nchar*           strncpy(char*, const char*, int);\n\n// syscall.c\nint             argint(int, int*);\nint             argptr(int, char**, int);\nint             argstr(int, char**);\nint             fetchint(uint, int*);\nint             fetchstr(uint, char**);\nvoid            syscall(void);\n\n// timer.c\nvoid            timerinit(void);\n\n// trap.c\nvoid            idtinit(void);\nextern uint     ticks;\nvoid            tvinit(void);\nextern struct spinlock tickslock;\n\n// uart.c\nvoid            uartinit(void);\nvoid            uartintr(void);\nvoid            uartputc(int);\n\n// vm.c\nvoid            seginit(void);\nvoid            kvmalloc(void);\npde_t*          setupkvm(void);\nchar*           uva2ka(pde_t*, char*);\nint             allocuvm(pde_t*, uint, uint);\nint             deallocuvm(pde_t*, uint, uint);\nvoid            freevm(pde_t*);\nvoid            inituvm(pde_t*, char*, uint);\nint             loaduvm(pde_t*, char*, struct inode*, uint, uint);\npde_t*          copyuvm(pde_t*, uint);\nvoid            switchuvm(struct proc*);\nvoid            switchkvm(void);\nint             copyout(pde_t*, uint, void*, uint);\nvoid            clearpteu(pde_t *pgdir, char *uva);\n\n// number of elements in fixed-size array\n#define NELEM(x) (sizeof(x)/sizeof((x)[0]))\n","undoManager":{"mark":40,"position":61,"stack":[[{"start":{"row":118,"column":6},"end":{"row":118,"column":10},"action":"insert","lines":["    "],"id":2}],[{"start":{"row":115,"column":23},"end":{"row":115,"column":24},"action":"remove","lines":["t"],"id":3}],[{"start":{"row":115,"column":22},"end":{"row":115,"column":23},"action":"remove","lines":["n"],"id":4}],[{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"remove","lines":["i"],"id":5}],[{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"insert","lines":["v"],"id":6}],[{"start":{"row":115,"column":22},"end":{"row":115,"column":23},"action":"insert","lines":["o"],"id":7}],[{"start":{"row":115,"column":23},"end":{"row":115,"column":24},"action":"insert","lines":["i"],"id":8}],[{"start":{"row":115,"column":24},"end":{"row":115,"column":25},"action":"insert","lines":["d"],"id":9}],[{"start":{"row":115,"column":24},"end":{"row":115,"column":25},"action":"remove","lines":["d"],"id":10}],[{"start":{"row":115,"column":23},"end":{"row":115,"column":24},"action":"remove","lines":["i"],"id":11}],[{"start":{"row":115,"column":22},"end":{"row":115,"column":23},"action":"remove","lines":["o"],"id":12}],[{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"remove","lines":["v"],"id":13}],[{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"insert","lines":["i"],"id":14}],[{"start":{"row":115,"column":22},"end":{"row":115,"column":23},"action":"insert","lines":["n"],"id":15}],[{"start":{"row":115,"column":23},"end":{"row":115,"column":24},"action":"insert","lines":["t"],"id":16}],[{"start":{"row":115,"column":24},"end":{"row":115,"column":25},"action":"insert","lines":[" "],"id":17}],[{"start":{"row":115,"column":25},"end":{"row":115,"column":26},"action":"insert","lines":["*"],"id":18}],[{"start":{"row":115,"column":26},"end":{"row":115,"column":27},"action":"insert","lines":[" "],"id":19}],[{"start":{"row":115,"column":27},"end":{"row":115,"column":28},"action":"insert","lines":["s"],"id":20}],[{"start":{"row":115,"column":28},"end":{"row":115,"column":29},"action":"insert","lines":["t"],"id":21}],[{"start":{"row":115,"column":29},"end":{"row":115,"column":30},"action":"insert","lines":["a"],"id":22}],[{"start":{"row":115,"column":30},"end":{"row":115,"column":31},"action":"insert","lines":["t"],"id":23}],[{"start":{"row":115,"column":31},"end":{"row":115,"column":32},"action":"insert","lines":["u"],"id":24}],[{"start":{"row":115,"column":32},"end":{"row":115,"column":33},"action":"insert","lines":["s"],"id":25}],[{"start":{"row":105,"column":30},"end":{"row":105,"column":31},"action":"remove","lines":["s"],"id":26}],[{"start":{"row":105,"column":29},"end":{"row":105,"column":30},"action":"remove","lines":["u"],"id":27}],[{"start":{"row":105,"column":28},"end":{"row":105,"column":29},"action":"remove","lines":["t"],"id":28}],[{"start":{"row":105,"column":27},"end":{"row":105,"column":28},"action":"remove","lines":["a"],"id":29}],[{"start":{"row":105,"column":26},"end":{"row":105,"column":27},"action":"remove","lines":["t"],"id":30}],[{"start":{"row":105,"column":25},"end":{"row":105,"column":26},"action":"remove","lines":["s"],"id":31}],[{"start":{"row":105,"column":24},"end":{"row":105,"column":25},"action":"remove","lines":[" "],"id":32}],[{"start":{"row":115,"column":32},"end":{"row":115,"column":33},"action":"remove","lines":["s"],"id":33}],[{"start":{"row":115,"column":31},"end":{"row":115,"column":32},"action":"remove","lines":["u"],"id":34}],[{"start":{"row":115,"column":30},"end":{"row":115,"column":31},"action":"remove","lines":["t"],"id":35}],[{"start":{"row":115,"column":29},"end":{"row":115,"column":30},"action":"remove","lines":["a"],"id":36}],[{"start":{"row":115,"column":28},"end":{"row":115,"column":29},"action":"remove","lines":["t"],"id":37}],[{"start":{"row":115,"column":27},"end":{"row":115,"column":28},"action":"remove","lines":["s"],"id":38}],[{"start":{"row":115,"column":26},"end":{"row":115,"column":27},"action":"remove","lines":[" "],"id":39}],[{"start":{"row":115,"column":25},"end":{"row":115,"column":26},"action":"remove","lines":["*"],"id":40}],[{"start":{"row":115,"column":24},"end":{"row":115,"column":25},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":115,"column":24},"end":{"row":115,"column":25},"action":"insert","lines":["*"],"id":42}],[{"start":{"row":118,"column":54},"end":{"row":119,"column":0},"action":"insert","lines":["",""],"id":43}],[{"start":{"row":119,"column":0},"end":{"row":119,"column":1},"action":"insert","lines":["v"],"id":44}],[{"start":{"row":119,"column":1},"end":{"row":119,"column":2},"action":"insert","lines":["o"],"id":45}],[{"start":{"row":119,"column":2},"end":{"row":119,"column":3},"action":"insert","lines":["i"],"id":46}],[{"start":{"row":119,"column":3},"end":{"row":119,"column":4},"action":"insert","lines":["d"],"id":47}],[{"start":{"row":119,"column":4},"end":{"row":119,"column":5},"action":"insert","lines":[" "],"id":48}],[{"start":{"row":119,"column":4},"end":{"row":119,"column":5},"action":"remove","lines":[" "],"id":49}],[{"start":{"row":119,"column":4},"end":{"row":119,"column":8},"action":"insert","lines":["    "],"id":50}],[{"start":{"row":119,"column":8},"end":{"row":119,"column":12},"action":"insert","lines":["    "],"id":51}],[{"start":{"row":119,"column":12},"end":{"row":119,"column":16},"action":"insert","lines":["    "],"id":52}],[{"start":{"row":119,"column":16},"end":{"row":119,"column":17},"action":"insert","lines":["w"],"id":53}],[{"start":{"row":119,"column":17},"end":{"row":119,"column":18},"action":"insert","lines":["a"],"id":54}],[{"start":{"row":119,"column":18},"end":{"row":119,"column":19},"action":"insert","lines":["i"],"id":55}],[{"start":{"row":119,"column":19},"end":{"row":119,"column":20},"action":"insert","lines":["t"],"id":56}],[{"start":{"row":119,"column":20},"end":{"row":119,"column":21},"action":"insert","lines":["p"],"id":57}],[{"start":{"row":119,"column":21},"end":{"row":119,"column":22},"action":"insert","lines":["i"],"id":58}],[{"start":{"row":119,"column":22},"end":{"row":119,"column":23},"action":"insert","lines":["d"],"id":59}],[{"start":{"row":119,"column":23},"end":{"row":119,"column":25},"action":"insert","lines":["()"],"id":60}],[{"start":{"row":119,"column":24},"end":{"row":119,"column":25},"action":"insert","lines":["i"],"id":61}],[{"start":{"row":119,"column":25},"end":{"row":119,"column":26},"action":"insert","lines":["n"],"id":62}],[{"start":{"row":119,"column":26},"end":{"row":119,"column":27},"action":"insert","lines":["t"],"id":63}]]},"ace":{"folds":[],"scrolltop":1388,"scrollleft":0,"selection":{"start":{"row":119,"column":27},"end":{"row":119,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":95,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1493527483615}